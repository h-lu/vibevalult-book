---
title: "第二章：从“一”到“多”：构建第一个“分子结构”"
---

> "一生二，二生三，三生万物。" - 《道德经》

::: {.video-container}
<iframe src="//player.bilibili.com/player.html?bvid=BV1fTapzZEaU&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400"></iframe>
:::

## 本章危机

我们创造了"歌曲"这个数字原子，但单个的原子无法表达复杂的意义。一首歌本身价值有限，但一个精心编排的"播放列表"却能承载情感和故事。我们如何从"一"走向"多"，从简单的原子构建出更复杂的分子？

## 本章顿悟

我们需要一个“容器”来组织这些原子，并将其封装成一个更有意义的、更高层次的概念。`class Playlist`就是我们创造的第一个“分子结构”。这个过程将引导我们深入理解面向对象编程的第一个、也是最重要的基石——**封装**。

在本章中，我们将学会如何将零散的数据，组织成有行为、有责任的业务对象。我们将：

1.  **[为何要封装？](./01-why-encapsulation.qmd)**: 从第一性原理出发，通过思想实验，理解封装作为构建可维护软件的基石，其核心在于隐藏实现细节和明确业务责任。
2.  **[设计播放列表“分子”](./02-molecular-design.qmd)**: 学习`class`关键字，亲手绘制`Playlist`类的蓝图，定义其私有状态（成员变量）和初始化逻辑（构造函数）。
3.  **[选择容器](./03-collection-choice.qmd)**: 深入Java集合框架的内部，对比`ArrayList`、`LinkedList`和`HashSet`的底层数据结构和性能宿命，为我们的`Playlist`做出最明智的技术选型，并最终实现其核心功能。

通过本章的学习，你将掌握从“数据集合”到“业务对象”的关键跃迁，这是成为一名真正软件工程师的核心技能之一。 