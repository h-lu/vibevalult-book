---
title: "0.1 - Vibe的转变：什么是Vibe Coding？"
---

> "我们称之为思想的，是与音乐共舞的情感。" - 弗拉基米尔·纳博科夫


::: {.video-container}
<iframe src="//player.bilibili.com/player.html?bvid=BV11LaGzkECw&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width="100%" height="400"></iframe>
:::

欢迎来到一个全新的编程时代。你可能已经感受到了空气中弥漫的“Vibe”正在发生转变——一股由人工智能驱动的强大浪潮，正在重塑我们对软件开发的认知。过去，编程常常被描绘成一种严谨、逻辑至上、甚至有些枯燥的活动，充满了对语法细节和样板代码的重复劳动。但现在，随着AI辅助编码工具的崛起，这种“Vibe”正在被彻底颠覆。

我们称这种新范式为**Vibe Coding**。


#### **1. 告别“码农”，拥抱“创造者”与“架构师”**

在AI辅助编码工具（如GitHub Copilot, Cursor, Gemini Code Assist）出现之前，程序员的大部分时间可能都花在编写重复的、模式化的代码上：配置数据库连接、实现CRUD（创建、读取、更新、删除）接口、编写简单的业务逻辑。这些工作虽然必要，但往往缺乏创造性，容易让人感到疲惫，甚至产生“码农”的自我认知。

**Vibe Coding 的核心理念是：将这些重复性、机械性的工作交给AI，让人类工程师回归到他们最擅长、也最有价值的角色——“创造者”和“架构师”。**

*   **作为创造者：** 你不再是代码的“打字员”，而是想法的“具象师”。你的精力将更多地投入到：
    *   **定义问题：** 准确理解用户需求和业务痛点。
    *   **设计解决方案：** 构思系统的整体架构、模块划分、数据流向。
    *   **创新实现：** 探索新的算法、优化用户体验、实现独特的功能。
    *   **注入“灵魂”：** 将你的洞察力、审美和对用户体验的同理心融入到软件中，使其不仅仅是功能的堆砌，而是有“Vibe”的产品。

*   **作为架构师：** AI可以生成代码，但它无法理解全局的业务上下文，无法进行复杂的系统权衡，也无法为代码的长期可维护性负责。这些都是架构师的职责。你将需要：
    *   **审查与指导AI：** 像一位经验丰富的总监指导初级工程师一样，审查AI生成的代码，确保其符合架构原则、安全标准和性能要求。
    *   **做出权衡决策：** 在性能、可扩展性、安全性、开发速度和成本之间做出明智的权衡。
    *   **定义“契约”与“边界”：** 设计清晰的API、接口和模块边界，确保系统各部分能够健康地协同工作。

#### **2. AI：你的资深结对伙伴**

在Vibe Coding中，AI不再是一个简单的代码生成器，它成为了你的**资深结对伙伴**。想象一下，你身边坐着一位拥有海量知识、不知疲倦、且能瞬间响应的超级工程师。

*   **执行者：** 你可以向AI描述你的意图，它会迅速为你生成初稿代码、样板文件、甚至复杂的算法实现。
*   **建议者：** 当你遇到问题时，AI可以提供多种解决方案、解释错误信息、推荐最佳实践。
*   **解释者：** 当你面对一段不理解的代码时，AI可以逐行解释其逻辑和意图，帮助你快速建立认知。

这种协同模式，将极大地加速你的开发流程，让你能够以更快的速度探索想法、验证概念，并将更多精力投入到高价值的创造性工作中。

#### **3. Vibe Coding 的核心转变：从“How”到“Why”**

传统的编程学习往往从“How”（怎么做）开始：如何写一个`for`循环，如何定义一个类。Vibe Coding则强调从“Why”（为什么）出发。

*   **为什么需要这个技术？**
*   **它要解决的最根本的问题是什么？**
*   **它背后的设计哲学是什么？**

这种对“Why”的深刻探究，正是本书所倡导的**第一性原理思维**。只有理解了事物的本质，你才能真正驾驭AI，而不是被AI所驾驭。你才能在AI生成“令人信服但错误”的代码时，一眼识破；你才能在AI无法提供创新解决方案时，自己进行突破。

Vibe Coding，不仅仅是一种编程方式的转变，更是一种思维模式的升级。它邀请你重新发现编程的乐趣，成为一个真正的创造者，与AI并肩，共同谱写数字世界的乐章。

### **Vibe Check (思考与练习)**

1.  **思考**: 在AI辅助编程的时代，你认为作为一名软件工程师，最核心的价值和不可替代的能力是什么？为什么？
    *   **提示**: 思考AI的局限性，以及人类独有的能力，例如：创造力、批判性思维、同理心、复杂问题定义、跨领域知识整合、责任感等。
2.  **AI协同**: 询问你的AI伙伴：“请从你的角度，描述一下‘Vibe Coding’这个概念，以及它如何改变了你作为AI助手的角色和与人类开发者的协作方式。”
    *   **目的**: 观察AI如何理解并阐述这个概念，以及它如何看待自身在这一新范式中的定位。
3.  **辩论**: “AI会取代程序员吗？”请你思考并阐述你的观点，并尝试从“第一性原理”的角度来论证。
    *   **提示**: 区分“编码”和“软件工程”的概念。AI可能取代部分“编码”工作，但“软件工程”的本质是什么？它是否能被完全取代？

